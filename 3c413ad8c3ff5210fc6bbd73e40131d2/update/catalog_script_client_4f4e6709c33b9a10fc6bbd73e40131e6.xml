<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Order Vehicle">429e9f41c3b39a10fc6bbd73e4013159</cat_item>
        <cat_variable>IO:27106fc1c3f39a10fc6bbd73e4013152</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Amount Calculate</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
   if (isLoading || newValue == '') {
      return;
   }

   var callBack = function(check) {
      if (check && check.u_price_2) { // Ensure check is not null and has u_price_2
         var price = parseInt(check.u_price_2, 10) || 0;
         var quantity = parseInt(newValue, 10) || 0;
         var total = price * quantity;
         var formattedTotal = formatINR(total); // Format separately
         
         g_form.setValue('total_amount', quantity + " X " + price + " = â‚¹ " + formattedTotal);
      }
   };

   g_form.getReference('choose_your_vehicle', callBack);
}

// Corrected INR Formatting Function
// function formatINR(number) {
//     return number.toString().replace(/\B(?=(\d{3})+(?!(\d{2})*\d$))/g, ",");
// }

function formatINR(number) {
    // Convert the number to a string and split it into integer and decimal parts
    let [integerPart, decimalPart] = number.toString().split(".");
    
    // Format the integer part using regex
    let lastThreeDigits = integerPart.slice(-3);
    let otherDigits = integerPart.slice(0, -3);
    
    if (otherDigits) {
        lastThreeDigits = ',' + lastThreeDigits;
    }
    
    // Group the other digits in pairs of two
    let formattedIntegerPart = otherDigits.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThreeDigits;

    // If there's a decimal part, append it
    if (decimalPart) {
        return formattedIntegerPart + "." + decimalPart;
    }
    
    return formattedIntegerPart;
}

//    var quantity = g_form.getValue("choose_the_quantity");

//    if (!isNaN(quantity)) {
//       var gr = new GlideRecord("x_1451492_maruti_s_vehicles");
//       gr.query(); 
      
//       if (gr.next()) { // Ensure a record exists before accessing it
//          var cost = parseInt(gr.getValue("u_price_2"), 10);
//          var ans = cost * parseInt(quantity, 10);
//          g_form.setValue("total_amount", ans);
//       }
//    }]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-02-17 06:44:47</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4f4e6709c33b9a10fc6bbd73e40131e6</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Amount Calculate</sys_name>
        <sys_overrides/>
        <sys_package display_value="Maruti Suzuki" source="x_1451492_maruti_s">3c413ad8c3ff5210fc6bbd73e40131d2</sys_package>
        <sys_policy/>
        <sys_scope display_value="Maruti Suzuki">3c413ad8c3ff5210fc6bbd73e40131d2</sys_scope>
        <sys_update_name>catalog_script_client_4f4e6709c33b9a10fc6bbd73e40131e6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-02-17 07:13:27</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>true</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
